<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thisteam.muhansangsa.mapper.StockMapper">
<!-- =======================================hawon==================================================================== -->
	<select id="selectStockList" resultType="Stock_viewVO">
		SELECT * 
		FROM stock_view
			<if test="!keyword.equals('')">
			
			<!-- 2. 검색타입(searchType) 에 따른 WHERE 대상 변경 -->
			<!-- => 조건이 복수개이므로 choose 태그 사용 -->
			<choose>
				<when test="searchType.equals('STOCK_CD')">
					WHERE STOCK_CD LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('PRODUCT_NAME')">
					WHERE PRODUCT_NAME LIKE '%${keyword}%'
				</when>
				<otherwise>
				</otherwise>
			</choose>		
			</if>
			
			LIMIT #{startRow}, #{listLimit}
	</select>

	<!-- 재고테이블에서 특정 상품 가져오는 태그  -->
	<select id="selectProductInLoc" resultType="Stock_viewVO">
	
		SELECT *
		FROM STOCK_VIEW 
		WHERE PRODUCT_CD = #{product_cd}
	</select>
	

	
	<select id="selectWarehouseList" resultType="WarehouseVO">
		SELECT * 
		FROM WAREHOUSE 
		ORDER BY WH_CD 
	</select>
	
	<select id="selectWarehouseAraList" resultType="WhAreaVO">
		SELECT * 
		FROM WAREHOUSE_AREA 
		WHERE WH_CD = #{wh_cd}
	</select>
	
	<!-- 체크박스로 선택된 재고번호 리스트 가져오는 태그  -->
	<select id="selectSelectedStock" resultType="Stock_viewVO">
		SELECT *
		FROM STOCK_VIEW 
		WHERE STOCK_CD IN
		<foreach collection="stock_cd" item="code" separator=","  open="(" close=")"  index="index">
			#{code}		
		</foreach>
	</select>
	<!-- 같은 품목 있는 선반 뺴고 특정 구역의 선반 리스트 뽑는 태그 -->
	<select id="selectWhAreaLocationList" resultType="Wms_wh_viewVO">
	SELECT WH_LOC_IN_AREA_CD, WH_LOC_IN_AREA 
	FROM WMS_WH_VIEW
		WHERE WH_AREA_CD = #{wh_area_cd}
		AND WH_LOC_IN_AREA_CD NOT IN 
									(SELECT WH_LOC_IN_AREA_CD 
										FROM STOCK_VIEW 
										WHERE PRODUCT_CD = #{product_cd})
	</select>
	
	<!-- 새 재고번호 추가 -->
	<insert id="insertNewStock"><!-- 만약 null이면..?-->
		<selectKey order="BEFORE" keyProperty="STOCK_CD" resultType="int">
			SELECT MAX(STOCK_CD) FROM STOCK;
		</selectKey>
		INSERT INTO STOCK VALUES( #{STOCK_CD}+1, #{product_cd} , #{wh_loc_in_area_cd} , 0)
	</insert>
	
	
	<!-- 페이징처리를 위한 재고리스트 총 개수 조회 230211 추가-->
	<select id="selectStockListCount" resultType="int">
		SELECT COUNT(STOCK_CD) 
		FROM STOCK_VIEW
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(searchType) 에 따른 WHERE 대상 변경 -->
				<!-- => 조건이 복수개이므로 choose 태그 사용 -->
				<choose>
		            <when test="searchType.equals('STOCK_CD')">
		               WHERE STOCK_CD LIKE '%${keyword}%'
		            </when>
		            <when test="searchType.equals('PRODUCT_NAME')">
		               WHERE PRODUCT_NAME LIKE '%${keyword}%'
		            </when>
		 			<otherwise></otherwise>
				</choose>		
			</if>
	</select>
<!-- =========================================================================================================== -->
	<!-- 재고이력 목록 조회 -->
	<select id="selectHistoryList" resultType="StockHistoryViewVO">
		SELECT * 
			FROM stock_history_view
			WHERE STOCK_CD = #{stock_cd}
			ORDER BY STOCK_DATE DESC
	</select>
	
	<!-- 이동 & 조정수량 입력을 통한 재고 수량 변경 -->
	<update id="updateStockQty" >
		UPDATE stock 
			SET STOCK_QTY = #{qty}
				WHERE STOCK_CD = #{stock_cd}
	</update>

	<!--  sId를 통한 사원번호 조회 -->
	<select id="selectEmpNum" resultType="String">
		SELECT emp_num 
			FROM employees
			WHERE emp_email = #{sId}
	</select>
	
	<insert id="insertStockHistory">
		<selectKey keyProperty="PRODUCT_CD" order="BEFORE" resultType="int">
			SELECT PRODUCT_CD 	
				FROM stock 
				WHERE STOCK_CD = #{stock.stock_cd}
		</selectKey>
		INSERT INTO stock_history
			VALUES (
				#{stock.stock_cd} 
			    ,#{stock.stock_control_type_cd}
			    ,#{PRODUCT_CD}
			    ,#{stock.source_stock_cd}
			    ,#{stock.target_stock_cd}
			    ,#{stock.qty}
				,#{stock.emp_num}
				,now()
				,""
			)
	</insert>


	<!-- WMS 창고 관리 페이지 속 재고 리스트 조회 (창고별, 창고 구역별, 창고 구역 내 위치별) -->
	<select id="selectWmsStockList" resultType="Stock_viewVO">
		SELECT * 
		FROM stock_view
			<if test="!keyword.equals('')">
			
			<!-- 2. 검색타입(searchType) 에 따른 WHERE 대상 변경 -->
			<!-- => 조건이 복수개이므로 choose 태그 사용 -->
			<choose>
				<when test="searchType.equals('STOCK_CD')">
					WHERE STOCK_CD LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('PRODUCT_NAME')">
					WHERE PRODUCT_NAME LIKE '%${keyword}%'
				</when>
				<otherwise>
				</otherwise>
			</choose>		
			</if>
			<!-- 창고 코드, 창고 구역 코드, 창고 구역 내 위치 코드에 따른 구분 -->
			<if test="!wh_cd.equals('')">
				WHERE wh_cd = #{wh_cd}
				<if test="wh_area_cd neq 0">
					AND wh_area_cd = #{wh_area_cd}
					<if test="wh_loc_in_area_cd neq 0">
						AND wh_loc_in_area_cd = #{wh_loc_in_area_cd}
					</if>
				</if>
			</if>
			
			LIMIT #{startRow}, #{listLimit}
	</select>


	<!-- ===========================23/02/07 추가======================= -->
	
	<update id="updateTargetStockQty">
		<selectKey resultType="int" order="BEFORE" keyProperty="STOCK_QTY">
			SELECT STOCK_QTY 
				FROM STOCK 
				WHERE STOCK_CD = #{targetStockCd}
		</selectKey>
		UPDATE stock 
			SET STOCK_QTY = (#{STOCK_QTY} + #{stockQty})
				WHERE STOCK_CD = #{targetStockCd}
	</update>
	
	
	<!-- ===========================23/02/07 추가======================= -->

	
	
</mapper>
