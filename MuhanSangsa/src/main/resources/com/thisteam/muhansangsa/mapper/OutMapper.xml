<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thisteam.muhansangsa.mapper.OutMapper">


<!-- ====================================HAWON=================================== -->
	<!-- 사원검색 -->
	<select id="selectEmp" resultType="Emp_viewVO">
	  
		 SELECT EMP_NUM, EMP_NAME, DEPT_NAME, GRADE_NAME 
		 FROM emp_view
		 WHERE EMP_NAME LIKE '%${keyword}%' 
			 OR DEPT_NAME LIKE '%${keyword}%' 
			 OR GRADE_NAME LIKE '%${keyword}%' 
			 OR EMP_NUM LIKE '%${keyword}%' 
		
	</select>
	
	<!-- 재고있는 상품 검색 -->
	<select id="selectProductStockExist" resultType="Stock_viewVO">
		SELECT PRODUCT_CD,PRODUCT_NAME
		FROM STOCK_VIEW 
		WHERE STOCK_QTY !=0
		<if test='keyword !=""'>
		AND  PRODUCT_NAME LIKE '%${keyword}%'
		</if>
		group by PRODUCT_CD
	</select>

	<select id="getMaxOut_schedule_codeIndex" resultType="String">
	<!-- 출고예정번호 생성을 위해 index 구하기 -->
		  	SELECT COUNT(OUT_SCHEDULE_CD)+1 -- 최댓값에 1 더하기
	  		FROM OUT_SCHEDULE 
	  		WHERE OUT_SCHEDULE_CD LIKE "${today}%";
	</select>


  	<!-- 신규 출고 등록  -->
  	<insert id="insertRegisterOutSchedule">
  		<!-- 출고예정번호 생성을 위한 준비작업 -->
	  	INSERT  INTO OUT_SCHEDULE
	  		 VALUES (
						#{out_schedule.out_schedule_cd}	-- OUT_SCHEDULE_CD
						,#{out_schedule.business_no}			-- BUSINESS_NO 
						,#{out_schedule.emp_num}			-- EMP_NUM  
						,#{out_schedule.out_date}			-- OUT_DATE 
						,#{out_schedule.remarks}			-- REMARKS 
						,"0"			-- OUT_COMPLETE
					)
  	</insert>
  	<!-- 신규 출고 품목 등록  -->
  	<insert id="insertRegisterOutScheduleProduct">

	  		  	INSERT INTO OUT_SCHEDULE_PER_PRODUCT
	  		 VALUES (
						#{osp.out_schedule_cd}	
						,#{osp.product_cd}		
						,#{osp.out_schedule_qty}		
						,0			
						,date_format(#{osp.out_date},"%Y-%m-%d")		
						,#{osp.remarks}	
						,#{osp.stock_cd}	
						,#{osp.out_complete}	
					)

  	</insert>
  
	<!-- ========================================================================= -->





<!-- ==================================== sewon =================================== -->
	<!--출고 예정 목록 조회 페이지 조회용(JSON)  -->
	<!--전체 조회-->
	<select id="selectOutList" resultType="com.thisteam.muhansangsa.vo.Out_scheduleListVO">
		SELECT
			a.out_schedule_cd,
			a.business_no,
			d.cust_name,
			a.emp_num,
			e.emp_name,
			a.out_date,
			a.remarks,
			(
				SELECT concat(MAX(C.PRODUCT_NAME),' 외 ',count(*),'건')  FROM out_schedule_per_product b ,	product c
				WHERE b.product_cd = c.product_cd
				AND b.out_schedule_cd = a.out_schedule_cd
			) product_name,
			a.out_complete,
			(
				SELECT sum(b.out_schedule_qty) FROM out_schedule_per_product b 
				WHERE b.out_schedule_cd = a.out_schedule_cd
			) out_schedule_qty,
			(
				SELECT sum(b.out_qty) FROM out_schedule_per_product b
				WHERE b.out_schedule_cd = a.out_schedule_cd
			) out_qty,
			a.remarks
		FROM
			out_schedule a,
			client d,
			employees e 
		WHERE
			a.business_no = d.business_no
			AND a.EMP_NUM = e.EMP_NUM 
			<if test="status gte 0">
				AND a.out_complete = #{status}
			</if>
			<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('out_schedule_cd')">
					AND a.out_schedule_cd LIKE '%${keyword}%'
				</when>
			</choose>
			</if>
		ORDER BY 
			a.out_schedule_cd DESC
	</select>
  
  
  	<!-- 출고 예정 목록 중 '종결,취소' 로 상태를 변환하기 위한 JSON 작업  -->
  	<update id="outWaitingChangeStatusJson">
	  	UPDATE out_schedule
		  	SET
			<choose>
				<when test='out_complete eq "0"'>
					out_complete='1'
				</when>
				<when test='out_complete eq "1"'>
					out_complete='0'
				</when>
			</choose>
		  	WHERE 
		  		out_schedule_cd = #{out_schedule_cd};
  	</update>
  
	<!-- ========================================================================= -->
  
   <!-- ==========================================================================23/02/09 미주-->
	
   <!--  
   		출고 관리 목록 조회 (출고번호에 해당하는 세부 항목 조회)
   		1. VIEW 테이블 내에서 ORDER BY 정렬 완료
   		2. 페이징 처리 완료
    -->
   <select id="selectOutTotalScheduleList" resultType="Out_scheduleListVO">
   		SELECT *
   			FROM out_schedule_total_view
		<if test="!keyword.equals('')">
   			WHERE
  			<choose>
				<when test="searchType.equals('OUT_SCHEDULE_CD')">
					  OUT_SCHEDULE_CD LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('PRODUCT_NAME')">
					  PRODUCT_NAME LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('CUST_NAME')">
					  CUST_NAME LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
			LIMIT 
				#{startRow}, #{listLimit}
   </select>
   
   <!-- 출고 관리 목록 페이징 처리 -->
	<select id="selectOutTotalScheduleListCount" resultType="int">
		SELECT COUNT(*)
			FROM out_schedule_total_view 
			<if test="!keyword.equals('')">
   			WHERE
  			<choose>
				<when test="searchType.equals('OUT_SCHEDULE_CD')">
					  OUT_SCHEDULE_CD LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('PRODUCT_NAME')">
					  PRODUCT_NAME LIKE '%${keyword}%'
				</when>
				<when test="searchType.equals('CUST_NAME')">
					  CUST_NAME LIKE '%${keyword}%'
				</when>
			</choose>
		</if>
	</select>
	
	
	<!-- (1). 출고 수정 정보 상단에 해당하는 정보 조회 (고정된 값) -->
	<select id="selectOutModifyFixedList" resultType="Out_schedule_total_viewVO">
		SELECT * 
			FROM OUT_SCHEDULE_TOTAL_VIEW
			WHERE OUT_SCHEDULE_CD = #{out_schedule_cd}
			GROUP BY #{out_schedule_cd}
	</select>
	
	<!-- (2). 출고 수정 정보 하단에 해당하는 정보 조회 (수정 가능한 값) -->
	<select id="selectOutModifyList" resultType="Out_schedule_total_viewVO">
		SELECT *
			FROM OUT_SCHEDULE_TOTAL_VIEW
			WHERE OUT_SCHEDULE_CD = #{out_schedule_cd}
	</select>
	<!-- 출고 처리 항목 수정 내용 비즈니스 로직 실행 -->
	<update id="updateOutScheduleModifyPro">
		UPDATE OUT_SCHEDULE_TOTAL_VIEW
			SET  
				OUT_SCHEDULE_QTY = #{total.out_schedule_qty}
			   ,OUT_QTY = #{total.out_qty}
			   ,REMARKS = #{total.remarks}
			   ,OUT_DATE = #{total.out_date}
			WHERE 
				OUT_SCHEDULE_CD = #{total.out_schedule_cd}
			AND 
				CUST_NAME = #{total.cust_name}
			AND 
				PRODUCT_NAME = #{total.product_name}
	</update>
	
   <!-- ==========================================================================23/02/09 미주-->	
  
 	<!-- ========================= jakyoung 시작 ============================ -->
 	<update id="updateOutQty">
<!--  		<selectKey resultType="int" order="BEFORE" keyProperty="out_schedule_qty"> -->
<!-- 			SELECT OUT_SCHEDULE_QTY -->
<!-- 				FROM out_schedule_per_product  -->
<!-- 				WHERE  -->
<!-- 					OUT_SCHEDULE_CD = #{out_schedule_cd} -->
<!-- 					AND STOCK_CD = #{stock_cd} -->
<!-- 		</selectKey> -->
 		UPDATE out_schedule_per_product
 			SET 
 				OUT_QTY = (OUT_QTY + #{out_qty})
<!--  				<if test="#{out_schecule_qty} == (OUT_QTY + #{out_qty})"> -->
<!--  					, OUT_COMPLETE = '1' -->
<!--  				</if> -->
 			WHERE
 				OUT_SCHEDULE_CD = #{out_schedule_cd}
				AND STOCK_CD = #{stock_cd}
 	</update>
 	
	<select id="selectOutScheduleTotal" resultType="Out_schedule_total_viewVO">
		SELECT *
			FROM
				out_schedule_total_view
			WHERE
				out_schedule_cd = #{out_schedule_cd}
				AND stock_cd = #{stock_cd}
	</select>
  
  	<select id="selectOutSchedule" resultType="Out_scheduleVO">
  		SELECT * 
  			FROM 
  				out_schedule
  			WHERE 
  				out_schedule_cd = #{out_schedule_cd}
  	</select>
  	
  	<update id="updateOutComplete">
  		UPDATE out_schedule_per_product
  			SET
  				out_complete = '1'
  			WHERE
  				out_schedule_cd = #{out_schedule_cd}
				AND stock_cd = #{stock_cd}
  	</update>
  
 	<!-- ========================= jakyoung 끝 ============================ -->




  
</mapper>
